var app = angular.module('app', ['angular-loading-bar', 'ui.router', 'ui.bootstrap', 'ui.sortable']);

app.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider){
	$urlRouterProvider.otherwise('/adItem');

	$stateProvider
		.state('adItem', {
			url: '/adItem',
			templateUrl : 'app/components/adItem/adItem.html',
			controller: 'adItemController',
			controllerAs: 'adItemCtrl'
		});
}]);


var AdItemController = function(adItemService){
	this.adItemService = adItemService;
};

AdItemController.prototype.display = function(url){
	var _this = this;

	//get data from Service
	_this.adItemService.Crawl().sendData(url)
		.then(function(response){
			_this.show = true;
			_this.links = response.links;
			_this.address = response.propertyInfo.address;
			_this.bedRoom = response.propertyInfo.no_bed;
			_this.bathRoom = response.propertyInfo.no_bath;
			_this.carport = response.propertyInfo.no_car;
		});

	//track ui.sortable object
	_this.sortableOptions = {
		stop: function(e, ui){
			var logEntry = _this.links.map(function(i){
				return i;
			});
			//set the list of links through service if dragged
			_this.adItemService.Crawl().sendLinks(logEntry);
			console.info('Reordered list of image links:\n' + logEntry.join('\n'));
		},
		items: ".adItemRow:not(.not-sortable)"
	}

	//submit form
	_this.submit = function(){
		//get data and prepare them for new assignment
		var gotData = _this.adItemService.Crawl().getData();
		var data = {
			links: this.links,
			propertyInfo: gotData.propertyInfo,
			templateDirWeb: gotData.templateDirWeb,
			templateInfo: gotData.templateInfo
		}

		//assign new values for backend
		data.propertyInfo.no_bed = _this.bedRoom;
		data.propertyInfo.no_bath = _this.bathRoom;
		data.propertyInfo.no_car = _this.carport;

		//send all values to backend
		_this.adItemService.Crawl().sendFinal(data);
		console.info('final data sent:\n');
		console.info(data);
	}
}

angular.module('app')
	.controller('adItemController', ['adItemService', AdItemController]);

var AdItemDirective = function(adItemService){
	var adItemDirective = {
		restrict: 'AE',
		templateUrl: 'app/components/adItem/adItemDirective.html',
		compile: function(){
			return {
				pre: preLink,
				post: postLink
			}
		},
		controller: Controls,
		controllerAs: 'adItem',
		//binds "out" with parent scope
		//binds "model" with current scope
		//binds "remove" as a method
		scope:{
			index: "@",
			model: "=",
			remove: "&",
		}
	};

	return adItemDirective;

	function Controls($scope, $element){
		var _this = this;
		var data = adItemService.Crawl().getData();

		var links = data.links;
		var propertyInfo = data.propertyInfo;
		var templateDirWeb = data.templateDirWeb;
		var templateInfo = data.templateInfo;

		var auctionHour = propertyInfo.auction_hour;
		var auctionDay = propertyInfo.auction_day;
		//console.log(data);

		//full array of values
		_this.values = [];

		//draw images
		//_this.source = links[$scope.index];
		_this.photo = {
			"src": links[$scope.index],
			"class": 'adItemPhotos'
		};

		//add in the sources
		_this.values.push(_this.photo);

		//add in templates
		_this.banner = {
			'src': templateDirWeb.Banner,
			'class': 'adItemBanner'
		};

		_this.bottom = {
			'src': templateDirWeb.Bottom,
			'class': 'adItemBottom'
		};

		_this.logo = {
			'src': templateDirWeb.Logo,
			'class': 'adItemLogo',
		};

		_this.bed = {
			'src': templateDirWeb.Bed,
			'class': 'adItemBed',
			'text': {
				text: propertyInfo.no_bed
			}
		};

		_this.bath = {
			'src': templateDirWeb.Bath,
			'class': 'adItemBath',
			'text': {
				text: propertyInfo.no_bath
			}
		};

		_this.car = {
			'src': templateDirWeb.Car,
			'class': 'adItemCar',
			'text': {
				text: propertyInfo.no_car
			}
		};

		_this.bannerText = {
			'firstLine': {
				text: 'Auction this'
			},
			'secondLine': {
				text: propertyInfo.auction_day + " " + propertyInfo.auction_hour
			}
		};

		//add in other elements
		if($scope.index == 0){
			//add in positioning
			_this.bannerText.firstLine.style = {
				'font-family': propertyInfo.agency_localDir,
				'font-size': templateInfo.main.Banner.A.top.font_size + "pt",
				'left': templateInfo.main.Banner.A.top.t_pos_x,
				'top': templateInfo.main.Banner.A.top.t_pos_y,
				'margin-left': -templateInfo.main.Banner.A.top.font_size,
				'margin-top': -templateInfo.main.Banner.A.top.font_size,
				'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				'webkit-transform-origin': 'left top',
				'-webkit-transform': "rotate(-" + templateInfo.main.Banner.angle + "deg)"
			};

			_this.bannerText.secondLine.style = {
				'font-family': propertyInfo.agency_localDir,
				'font-size': templateInfo.main.Banner.A.bottom[auctionDay][auctionHour.length].font_size + "pt",
				'left': templateInfo.main.Banner.A.bottom[auctionDay][auctionHour.length].t_pos_x,
				'top': templateInfo.main.Banner.A.bottom[auctionDay][auctionHour.length].t_pos_y,
				'margin-left': -templateInfo.main.Banner.A.bottom[auctionDay][auctionHour.length].font_size,
				'margin-top': -templateInfo.main.Banner.A.bottom[auctionDay][auctionHour.length].font_size,
				'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				'webkit-transform-origin': 'left top',
				'-webkit-transform': "rotate(-" + templateInfo.main.Banner.angle + "deg)"
			};

			_this.logo.style = {
				'left': templateInfo.main.Logo.pos_x,
				'top': templateInfo.main.Logo.pos_y,
			};

			_this.bed.style = {
				'left': templateInfo.main.Bed.pos_x,
				'top': templateInfo.main.Bed.pos_y
			};

			_this.bath.style = {
				'left': templateInfo.main.Bath.pos_x,
				'top': templateInfo.main.Bath.pos_y
			};

			_this.car.style = {
				'left': templateInfo.main.Car.pos_x,
				'top': templateInfo.main.Car.pos_y
			};

			//add in looped elements
			_this.values.push(_this.banner);
			_this.values.push(_this.bottom);
			_this.values.push(_this.logo);
			_this.values.push(_this.bannerText);
			_this.values.push(_this.bed);
			_this.values.push(_this.bath);

			if(propertyInfo.no_car != "N/A"){
				_this.bed.text.style = {
					'font-family': propertyInfo.agency_localDir,
					'font-size': templateInfo.main.Text.font_size + "pt",
					'left': templateInfo.main.Bed.t_pos_x,
					'top': templateInfo.main.Bed.t_pos_y - templateInfo.main.Text.font_size+"px",
					'line-height': templateInfo.main.Text.font_size + "px",
					'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				};

				_this.bath.text.style = {
					'font-family': propertyInfo.agency_localDir,
					'font-size': templateInfo.main.Text.font_size + "pt",
					'left': templateInfo.main.Bath.t_pos_x,
					'top': templateInfo.main.Bath.t_pos_y - templateInfo.main.Text.font_size+"px",
					'line-height': templateInfo.main.Text.font_size + "px",
					'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				};

				_this.car.text.style = {
					'font-family': propertyInfo.agency_localDir,
					'font-size': templateInfo.main.Text.font_size + "pt",
					'left': templateInfo.main.Car.t_pos_x,
					'top': templateInfo.main.Car.t_pos_y - templateInfo.main.Text.font_size+"px",
					'line-height': templateInfo.main.Text.font_size + "px",
					'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				};
				_this.values.push(_this.car);
			}else if(propertyInfo.no_car == "N/A"){
				_this.bed.text.style = {
					'font-family': propertyInfo.agency_localDir,
					'font-size': templateInfo.main.Text.font_size + "pt",
					'left': templateInfo.main.Bed.t_pos_x_2,
					'top': templateInfo.main.Bed.t_pos_y_2 - templateInfo.main.Text.font_size+"px",
					'line-height': templateInfo.main.Text.font_size + "px",
					'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				};

				_this.bath.text.style = {
					'font-family': propertyInfo.agency_localDir,
					'font-size': templateInfo.main.Text.font_size + "pt",
					'left': templateInfo.main.Bath.t_pos_x_2,
					'top': templateInfo.main.Bath.t_pos_y_2 - templateInfo.main.Text.font_size+"px",
					'line-height': templateInfo.main.Text.font_size + "px",
					'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				};

				_this.car.text.style = {
					'font-family': propertyInfo.agency_localDir,
					'font-size': templateInfo.main.Text.font_size + "pt",
					'left': templateInfo.main.Car.t_pos_x_2,
					'top': templateInfo.main.Car.t_pos_y_2 - templateInfo.main.Text.font_size+"px",
					'line-height': templateInfo.main.Text.font_size + "px",
					'color': 'rgb('+templateInfo.main.Text.colour_banner_r+','+templateInfo.main.Text.colour_banner_g+','+templateInfo.main.Text.colour_banner_b+')',
				};
			}
		}else{
			//add in positioning
			_this.logo.style = {
				'left': templateInfo.other.Logo.pos_x,
				'top': templateInfo.other.Logo.pos_y,
			};

			_this.values.push(_this.logo);
		}
	}

	function postLink(scope, elem, attrs){
		//postlinks functions here
		elem.find('img.adItemLogo').css({'background-color': 'red'});
	}

	function preLink(scope, elem, attrs){
	}
};

angular.module('app')
	.directive('adItem', ['adItemService', AdItemDirective]);

var AdItemService = function($http, $q){
	this.$http = $http;
	this.$q = $q;
};

AdItemService.prototype.Crawl = function(){
	var _this = this;

	var crawl = {
		sendData: function(url){
			var request = {
				url: url
			}

			var deferred = _this.$q.defer();
			var promise = _this.$http.post('api/crawl', request);

				promise.success(function(response){
					//assign custom adItemService values after response
					_this.links = response.links;
					_this.propertyInfo = response.propertyInfo;
					_this.templateDirWeb = response.templateDirWeb;
					_this.templateInfo = response.templateInfo;

					//defer returned values
					deferred.resolve({
						links: response.links,
						propertyInfo: response.propertyInfo,
						templateDirWeb: response.templateDirWeb,
						templateInfo: response.templateInfo
					});
				});
			return deferred.promise;
		},
		getData: function(){
			//return assigned data from initial request
			var data = {
				links: _this.links,
				propertyInfo: _this.propertyInfo,
				templateDirWeb: _this.templateDirWeb,
				templateInfo: _this.templateInfo
			}
			return data;
		},
		sendLinks: function(input){
			_this.newlinks = input;
			return _this.newLinks;
		},
		getLinks: function(){
			var newlinks = _this.newlinks;
			return newlinks;
		},
		sendFinal: function(data){
			var promise = _this.$http.post('api/sendFinal', data);
		}
	};
	return crawl;
}

angular.module('app')
	.service('adItemService', ['$http', '$q', AdItemService]);
